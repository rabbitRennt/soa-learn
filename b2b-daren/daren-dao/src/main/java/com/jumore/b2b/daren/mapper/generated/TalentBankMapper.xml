<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jumore.b2b.daren.mapper.TalentBankMapper" >
  <resultMap id="BaseResultMap" type="com.jumore.b2b.daren.model.TalentBank" >
    <id column="ID" property="id" jdbcType="BIGINT" />
    <result column="BANK_NAME" property="bankName" jdbcType="VARCHAR" />
    <result column="BANK_MOBILE" property="bankMobile" jdbcType="VARCHAR" />
    <result column="ID_CARD" property="idCard" jdbcType="VARCHAR" />
    <result column="BANK_TYPE" property="bankType" jdbcType="INTEGER" />
    <result column="BANK_NO" property="bankNo" jdbcType="VARCHAR" />
    <result column="DELETE_FLAG" property="deleteFlag" jdbcType="INTEGER" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, BANK_NAME, BANK_MOBILE, ID_CARD, BANK_TYPE, BANK_NO, DELETE_FLAG, CREATE_TIME, 
    UPDATE_TIME
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jumore.b2b.daren.model.TalentBankQueryHelper" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from talent_bank
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from talent_bank
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from talent_bank
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.jumore.b2b.daren.model.TalentBankQueryHelper" >
    delete from talent_bank
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jumore.b2b.daren.model.TalentBank" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="BEFORE" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into talent_bank (ID, BANK_NAME, BANK_MOBILE, 
      ID_CARD, BANK_TYPE, BANK_NO, 
      DELETE_FLAG, CREATE_TIME, UPDATE_TIME
      )
    values (#{id,jdbcType=BIGINT}, #{bankName,jdbcType=VARCHAR}, #{bankMobile,jdbcType=VARCHAR}, 
      #{idCard,jdbcType=VARCHAR}, #{bankType,jdbcType=INTEGER}, #{bankNo,jdbcType=VARCHAR}, 
      #{deleteFlag,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jumore.b2b.daren.model.TalentBank" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="BEFORE" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into talent_bank
    <trim prefix="(" suffix=")" suffixOverrides="," >
      ID,
      <if test="bankName != null" >
        BANK_NAME,
      </if>
      <if test="bankMobile != null" >
        BANK_MOBILE,
      </if>
      <if test="idCard != null" >
        ID_CARD,
      </if>
      <if test="bankType != null" >
        BANK_TYPE,
      </if>
      <if test="bankNo != null" >
        BANK_NO,
      </if>
      <if test="deleteFlag != null" >
        DELETE_FLAG,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{id,jdbcType=BIGINT},
      <if test="bankName != null" >
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankMobile != null" >
        #{bankMobile,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null" >
        #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="bankType != null" >
        #{bankType,jdbcType=INTEGER},
      </if>
      <if test="bankNo != null" >
        #{bankNo,jdbcType=VARCHAR},
      </if>
      <if test="deleteFlag != null" >
        #{deleteFlag,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jumore.b2b.daren.model.TalentBankQueryHelper" resultType="java.lang.Integer" >
    select count(*) from talent_bank
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update talent_bank
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.bankName != null" >
        BANK_NAME = #{record.bankName,jdbcType=VARCHAR},
      </if>
      <if test="record.bankMobile != null" >
        BANK_MOBILE = #{record.bankMobile,jdbcType=VARCHAR},
      </if>
      <if test="record.idCard != null" >
        ID_CARD = #{record.idCard,jdbcType=VARCHAR},
      </if>
      <if test="record.bankType != null" >
        BANK_TYPE = #{record.bankType,jdbcType=INTEGER},
      </if>
      <if test="record.bankNo != null" >
        BANK_NO = #{record.bankNo,jdbcType=VARCHAR},
      </if>
      <if test="record.deleteFlag != null" >
        DELETE_FLAG = #{record.deleteFlag,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update talent_bank
    set ID = #{record.id,jdbcType=BIGINT},
      BANK_NAME = #{record.bankName,jdbcType=VARCHAR},
      BANK_MOBILE = #{record.bankMobile,jdbcType=VARCHAR},
      ID_CARD = #{record.idCard,jdbcType=VARCHAR},
      BANK_TYPE = #{record.bankType,jdbcType=INTEGER},
      BANK_NO = #{record.bankNo,jdbcType=VARCHAR},
      DELETE_FLAG = #{record.deleteFlag,jdbcType=INTEGER},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jumore.b2b.daren.model.TalentBank" >
    update talent_bank
    <set >
      <if test="bankName != null" >
        BANK_NAME = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankMobile != null" >
        BANK_MOBILE = #{bankMobile,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null" >
        ID_CARD = #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="bankType != null" >
        BANK_TYPE = #{bankType,jdbcType=INTEGER},
      </if>
      <if test="bankNo != null" >
        BANK_NO = #{bankNo,jdbcType=VARCHAR},
      </if>
      <if test="deleteFlag != null" >
        DELETE_FLAG = #{deleteFlag,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jumore.b2b.daren.model.TalentBank" >
    update talent_bank
    set BANK_NAME = #{bankName,jdbcType=VARCHAR},
      BANK_MOBILE = #{bankMobile,jdbcType=VARCHAR},
      ID_CARD = #{idCard,jdbcType=VARCHAR},
      BANK_TYPE = #{bankType,jdbcType=INTEGER},
      BANK_NO = #{bankNo,jdbcType=VARCHAR},
      DELETE_FLAG = #{deleteFlag,jdbcType=INTEGER},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=BIGINT}
  </update>
</mapper>