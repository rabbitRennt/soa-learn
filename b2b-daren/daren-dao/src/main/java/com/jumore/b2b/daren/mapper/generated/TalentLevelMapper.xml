<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jumore.b2b.daren.mapper.TalentLevelMapper" >
  <resultMap id="BaseResultMap" type="com.jumore.b2b.daren.model.TalentLevel" >
    <id column="ID" property="id" jdbcType="BIGINT" />
    <result column="SCALE_ID" property="scaleId" jdbcType="BIGINT" />
    <result column="LEVEL" property="level" jdbcType="INTEGER" />
    <result column="VALUE" property="value" jdbcType="VARCHAR" />
    <result column="RANGE_START" property="rangeStart" jdbcType="VARCHAR" />
    <result column="RANGE_END" property="rangeEnd" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="DELETE_FLAG" property="deleteFlag" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, SCALE_ID, LEVEL, VALUE, RANGE_START, RANGE_END, CREATE_TIME, UPDATE_TIME, DELETE_FLAG
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jumore.b2b.daren.model.TalentLevelQueryHelper" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from talent_level
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from talent_level
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from talent_level
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.jumore.b2b.daren.model.TalentLevelQueryHelper" >
    delete from talent_level
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jumore.b2b.daren.model.TalentLevel" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="BEFORE" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into talent_level (ID, SCALE_ID, LEVEL, 
      VALUE, RANGE_START, RANGE_END, 
      CREATE_TIME, UPDATE_TIME, DELETE_FLAG
      )
    values (#{id,jdbcType=BIGINT}, #{scaleId,jdbcType=BIGINT}, #{level,jdbcType=INTEGER}, 
      #{value,jdbcType=VARCHAR}, #{rangeStart,jdbcType=VARCHAR}, #{rangeEnd,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{deleteFlag,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jumore.b2b.daren.model.TalentLevel" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="BEFORE" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into talent_level
    <trim prefix="(" suffix=")" suffixOverrides="," >
      ID,
      <if test="scaleId != null" >
        SCALE_ID,
      </if>
      <if test="level != null" >
        LEVEL,
      </if>
      <if test="value != null" >
        VALUE,
      </if>
      <if test="rangeStart != null" >
        RANGE_START,
      </if>
      <if test="rangeEnd != null" >
        RANGE_END,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
      <if test="deleteFlag != null" >
        DELETE_FLAG,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{id,jdbcType=BIGINT},
      <if test="scaleId != null" >
        #{scaleId,jdbcType=BIGINT},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="value != null" >
        #{value,jdbcType=VARCHAR},
      </if>
      <if test="rangeStart != null" >
        #{rangeStart,jdbcType=VARCHAR},
      </if>
      <if test="rangeEnd != null" >
        #{rangeEnd,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteFlag != null" >
        #{deleteFlag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jumore.b2b.daren.model.TalentLevelQueryHelper" resultType="java.lang.Integer" >
    select count(*) from talent_level
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update talent_level
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.scaleId != null" >
        SCALE_ID = #{record.scaleId,jdbcType=BIGINT},
      </if>
      <if test="record.level != null" >
        LEVEL = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.value != null" >
        VALUE = #{record.value,jdbcType=VARCHAR},
      </if>
      <if test="record.rangeStart != null" >
        RANGE_START = #{record.rangeStart,jdbcType=VARCHAR},
      </if>
      <if test="record.rangeEnd != null" >
        RANGE_END = #{record.rangeEnd,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleteFlag != null" >
        DELETE_FLAG = #{record.deleteFlag,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update talent_level
    set ID = #{record.id,jdbcType=BIGINT},
      SCALE_ID = #{record.scaleId,jdbcType=BIGINT},
      LEVEL = #{record.level,jdbcType=INTEGER},
      VALUE = #{record.value,jdbcType=VARCHAR},
      RANGE_START = #{record.rangeStart,jdbcType=VARCHAR},
      RANGE_END = #{record.rangeEnd,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      DELETE_FLAG = #{record.deleteFlag,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jumore.b2b.daren.model.TalentLevel" >
    update talent_level
    <set >
      <if test="scaleId != null" >
        SCALE_ID = #{scaleId,jdbcType=BIGINT},
      </if>
      <if test="level != null" >
        LEVEL = #{level,jdbcType=INTEGER},
      </if>
      <if test="value != null" >
        VALUE = #{value,jdbcType=VARCHAR},
      </if>
      <if test="rangeStart != null" >
        RANGE_START = #{rangeStart,jdbcType=VARCHAR},
      </if>
      <if test="rangeEnd != null" >
        RANGE_END = #{rangeEnd,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteFlag != null" >
        DELETE_FLAG = #{deleteFlag,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jumore.b2b.daren.model.TalentLevel" >
    update talent_level
    set SCALE_ID = #{scaleId,jdbcType=BIGINT},
      LEVEL = #{level,jdbcType=INTEGER},
      VALUE = #{value,jdbcType=VARCHAR},
      RANGE_START = #{rangeStart,jdbcType=VARCHAR},
      RANGE_END = #{rangeEnd,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      DELETE_FLAG = #{deleteFlag,jdbcType=INTEGER}
    where ID = #{id,jdbcType=BIGINT}
  </update>
</mapper>